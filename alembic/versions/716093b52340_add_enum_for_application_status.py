"""add enum for application status

Revision ID: 716093b52340
Revises: 677205c9220e
Create Date: 2025-08-25 21:42:40.693837

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '716093b52340'
down_revision: Union[str, Sequence[str], None] = '677205c9220e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('applications', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('applications', sa.Column('applied_date', sa.DateTime(), nullable=True))
    op.add_column('applications', sa.Column('notes', sa.String(), nullable=True))
    op.add_column('applications', sa.Column('job_description', sa.String(), nullable=True))
    op.add_column('applications', sa.Column('job_link', sa.String(), nullable=True))
    op.add_column('applications', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('applications', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('applications', 'job_title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('applications', 'company',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_foreign_key(None, 'applications', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('applications', 'status')
    op.drop_column('applications', 'date_applied')
    op.alter_column('resumes', 'public_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('resumes', 'public_id',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.add_column('applications', sa.Column('date_applied', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('applications', sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'applications', type_='foreignkey')
    op.alter_column('applications', 'company',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('applications', 'job_title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('applications', 'updated_at')
    op.drop_column('applications', 'created_at')
    op.drop_column('applications', 'job_link')
    op.drop_column('applications', 'job_description')
    op.drop_column('applications', 'notes')
    op.drop_column('applications', 'applied_date')
    op.drop_column('applications', 'user_id')
    # ### end Alembic commands ###
